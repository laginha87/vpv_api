type Campaign {
  campaignSupplies: [CampaignSupply!]
  completion: Int
  corporation: Corporation
  endDatetime: ISO8601DateTime
  id: ID!
}

input CampaignContributionSupplyInput {
  campaignSupplyId: ID!
  quantity: Int!
}

type CampaignSupply {
  campaign: Campaign
  quantityNeeded: Int
  quantitySupplied: Int
  supply: Supply
}

type Corporation {
  createdAt: ISO8601DateTime
  latitude: Float
  longitude: Float
  name: String
  updatedAt: ISO8601DateTime
}

"""
Autogenerated input type of CreateCampaignContribution
"""
input CreateCampaignContributionInput {
  campaignId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contributionSupplies: [CampaignContributionSupplyInput!]!
  userId: ID!
}

type Fire {
  latitude: Float
  longitude: Float
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Mutation {
  createCampaignContribution(input: CreateCampaignContributionInput!): Campaign
}

type Query {
  """
  An example field added by the generator
  """
  campaign(id: ID!): Campaign!

  """
  An example field added by the generator
  """
  campaigns: [Campaign!]!

  """
  An example field added by the generator
  """
  fires: [Fire!]!
}

type Supply {
  description: String
  icon: String
  id: ID
  name: String
}